// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/agent/agent.go

// Package testing is a generated GoMock package.
package testing

import (
	reflect "reflect"

	config "antrea.io/antrea/pkg/agent/config"
	wireguard "antrea.io/antrea/pkg/agent/wireguard"
	gomock "github.com/golang/mock/gomock"
)

// MockAgentInitialierI is a mock of AgentInitialierI interface.
type MockAgentInitialierI struct {
	ctrl     *gomock.Controller
	recorder *MockAgentInitialierIMockRecorder
}

// MockAgentInitialierIMockRecorder is the mock recorder for MockAgentInitialierI.
type MockAgentInitialierIMockRecorder struct {
	mock *MockAgentInitialierI
}

// NewMockAgentInitialierI creates a new mock instance.
func NewMockAgentInitialierI(ctrl *gomock.Controller) *MockAgentInitialierI {
	mock := &MockAgentInitialierI{ctrl: ctrl}
	mock.recorder = &MockAgentInitialierIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentInitialierI) EXPECT() *MockAgentInitialierIMockRecorder {
	return m.recorder
}

// ConnectUplinkToOVSBridge mocks base method.
func (m *MockAgentInitialierI) ConnectUplinkToOVSBridge() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConnectUplinkToOVSBridge")
	ret0, _ := ret[0].(error)
	return ret0
}

// ConnectUplinkToOVSBridge indicates an expected call of ConnectUplinkToOVSBridge.
func (mr *MockAgentInitialierIMockRecorder) ConnectUplinkToOVSBridge() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConnectUplinkToOVSBridge", reflect.TypeOf((*MockAgentInitialierI)(nil).ConnectUplinkToOVSBridge))
}

// FlowRestoreComplete mocks base method.
func (m *MockAgentInitialierI) FlowRestoreComplete() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlowRestoreComplete")
	ret0, _ := ret[0].(error)
	return ret0
}

// FlowRestoreComplete indicates an expected call of FlowRestoreComplete.
func (mr *MockAgentInitialierIMockRecorder) FlowRestoreComplete() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlowRestoreComplete", reflect.TypeOf((*MockAgentInitialierI)(nil).FlowRestoreComplete))
}

// GetNodeConfig mocks base method.
func (m *MockAgentInitialierI) GetNodeConfig() *config.NodeConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeConfig")
	ret0, _ := ret[0].(*config.NodeConfig)
	return ret0
}

// GetNodeConfig indicates an expected call of GetNodeConfig.
func (mr *MockAgentInitialierIMockRecorder) GetNodeConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeConfig", reflect.TypeOf((*MockAgentInitialierI)(nil).GetNodeConfig))
}

// GetWireGuardClient mocks base method.
func (m *MockAgentInitialierI) GetWireGuardClient() wireguard.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWireGuardClient")
	ret0, _ := ret[0].(wireguard.Interface)
	return ret0
}

// GetWireGuardClient indicates an expected call of GetWireGuardClient.
func (mr *MockAgentInitialierIMockRecorder) GetWireGuardClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWireGuardClient", reflect.TypeOf((*MockAgentInitialierI)(nil).GetWireGuardClient))
}

// Initialize mocks base method.
func (m *MockAgentInitialierI) Initialize() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Initialize")
	ret0, _ := ret[0].(error)
	return ret0
}

// Initialize indicates an expected call of Initialize.
func (mr *MockAgentInitialierIMockRecorder) Initialize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Initialize", reflect.TypeOf((*MockAgentInitialierI)(nil).Initialize))
}

// RestoreOVSBridge mocks base method.
func (m *MockAgentInitialierI) RestoreOVSBridge() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RestoreOVSBridge")
}

// RestoreOVSBridge indicates an expected call of RestoreOVSBridge.
func (mr *MockAgentInitialierIMockRecorder) RestoreOVSBridge() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RestoreOVSBridge", reflect.TypeOf((*MockAgentInitialierI)(nil).RestoreOVSBridge))
}
